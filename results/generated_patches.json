[
    {
        "id": 1,
        "sha_fail": "2c06ffa4c9d2c37846c60ad75899b4d72f214ff9",
        "diff": "diff --git a/examples/community/ip_adapter_face_id.py b/examples/community/ip_adapter_face_id.py\nindex e3c5a2c84..38b26fda3 100644\n--- a/examples/community/ip_adapter_face_id.py\n+++ b/examples/community/ip_adapter_face_id.py\n@@ -14,33 +14,49 @@\n \n import inspect\n from typing import Any, Callable, Dict, List, Optional, Union\n-from safetensors import safe_open\n \n import torch\n import torch.nn as nn\n import torch.nn.functional as F\n from packaging import version\n-from transformers import CLIPImageProcessor, CLIPTextModel, CLIPTokenizer, CLIPVisionModelWithProjection\n+from safetensors import safe_open\n+from transformers import (\n+    CLIPImageProcessor,\n+    CLIPTextModel,\n+    CLIPTokenizer,\n+    CLIPVisionModelWithProjection,\n+)\n \n from diffusers.configuration_utils import FrozenDict\n from diffusers.image_processor import VaeImageProcessor\n-from diffusers.loaders import FromSingleFileMixin, IPAdapterMixin, LoraLoaderMixin, TextualInversionLoaderMixin\n-from diffusers.models import AutoencoderKL, UNet2DConditionModel\n+from diffusers.loaders import (\n+    FromSingleFileMixin,\n+    IPAdapterMixin,\n+    LoraLoaderMixin,\n+    TextualInversionLoaderMixin,\n+)\n+from diffusers.models import (\n+    AutoencoderKL,\n+    UNet2DConditionModel,\n+)\n from diffusers.models.attention_processor import FusedAttnProcessor2_0\n-from diffusers.models.lora import adjust_lora_scale_text_encoder, LoRALinearLayer\n+from diffusers.models.lora import (\n+    LoRALinearLayer,\n+    adjust_lora_scale_text_encoder,\n+)\n+from diffusers.pipelines.pipeline_utils import DiffusionPipeline\n+from diffusers.pipelines.stable_diffusion.pipeline_output import StableDiffusionPipelineOutput\n+from diffusers.pipelines.stable_diffusion.safety_checker import StableDiffusionSafetyChecker\n from diffusers.schedulers import KarrasDiffusionSchedulers\n from diffusers.utils import (\n-    _get_model_file,\n     USE_PEFT_BACKEND,\n+    _get_model_file,\n     deprecate,\n     logging,\n     scale_lora_layers,\n     unscale_lora_layers,\n )\n from diffusers.utils.torch_utils import randn_tensor\n-from diffusers.pipelines.pipeline_utils import DiffusionPipeline\n-from diffusers.pipelines.stable_diffusion.pipeline_output import StableDiffusionPipelineOutput\n-from diffusers.pipelines.stable_diffusion.safety_checker import StableDiffusionSafetyChecker\n \n \n logger = logging.get_logger(__name__)  # pylint: disable=invalid-name\n@@ -555,7 +571,7 @@ class IPAdapterFaceIDStableDiffusionPipeline(\n             revision=revision,\n             subfolder=subfolder,\n             user_agent=user_agent,\n-            )\n+        )\n         if weight_name.endswith(\".safetensors\"):\n             state_dict = {\"image_proj\": {}, \"ip_adapter\": {}}\n             with safe_open(model_file, framework=\"pt\", device=\"cpu\") as f:\n@@ -1438,7 +1454,7 @@ class IPAdapterFaceIDStableDiffusionPipeline(\n         extra_step_kwargs = self.prepare_extra_step_kwargs(generator, eta)\n \n         # 6.1 Add image embeds for IP-Adapter\n-        added_cond_kwargs ={\"image_embeds\": image_embeds} if image_embeds is not None else None\n+        added_cond_kwargs = {\"image_embeds\": image_embeds} if image_embeds is not None else None\n \n         # 6.2 Optionally get Guidance Scale Embedding\n         timestep_cond = None\n"
    },
    {
        "id": 2,
        "sha_fail": "db6550a228941b538f340fb5b65ed16c43a21b88",
        "diff": "diff --git a/src/diffusers/loaders/ip_adapter.py b/src/diffusers/loaders/ip_adapter.py\nindex df9caa946..0c310019f 100644\n--- a/src/diffusers/loaders/ip_adapter.py\n+++ b/src/diffusers/loaders/ip_adapter.py\n@@ -12,7 +12,7 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n import os\n-from typing import Dict, Optional, Union\n+from typing import Dict, Union\n \n import torch\n from huggingface_hub.utils import validate_hf_hub_args\n"
    },
    {
        "id": 3,
        "sha_fail": "102f918deb2532bb7b825f00258f2c1414cf94da",
        "diff": "diff --git a/requirements/requirements.txt b/requirements/requirements.txt\nindex 268a4b0bb..db309711c 100644\n--- a/requirements/requirements.txt\n+++ b/requirements/requirements.txt\n@@ -24,7 +24,6 @@ duckdb == 0.9.1\n requests >= 2.30.0\n pydateinfer==0.3.0\n dataprep_ml==0.0.21\n-type_infer==0.0.17\n dill == 0.3.6\n numpy\n pytz\n"
    }
]